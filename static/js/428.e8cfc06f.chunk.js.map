{"version":3,"file":"static/js/428.e8cfc06f.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.js","pages/MoviesPage/MoviesPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link as ItemLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 25px;\n  column-gap: 20px;\n  /* justify-content: center; */\n  width: 100%;\n`;\n\nexport const ListItem = styled.li`\n  width: 200px;\n  width: calc((100% - 140px) / 7);\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-decoration: none;\n\n  transition: transform 200ms linear;\n\n  &:hover, &:focus {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Link = styled(ItemLink)`\n  color: #ffffff;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  border-radius: 10px;\n  margin-bottom: 6px;\n`;\n\nexport const MovieTitle = styled.p``;\n","import { BASE_POSTER_URL, IMG_PLACEHOLDER } from 'constants/constants';\nimport { useLocation } from 'react-router-dom';\nimport { Img, Link, List, ListItem, MovieTitle } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, original_title, poster_path }) => {\n        return (\n          <ListItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <Img\n                src={poster_path ? BASE_POSTER_URL + poster_path : IMG_PLACEHOLDER}\n                alt={original_title}\n              />\n              <MovieTitle>{original_title}</MovieTitle>\n            </Link>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n  margin-bottom: 20px;\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  color: black;\n  left: 15px;\n  top: 15px;\n  font-weight: 500;\n  font-size: 20px;\n  pointer-events: none;\n  transition: transform 250ms linear, color 250ms linear;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  font: inherit;\n  outline: transparent;\n  font-size: 20px;\n  border-radius: 10px;\n  width: 600px;\n  height: 50px;\n  outline: none;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-right: 105px;\n  padding-left: 15px;\n\n  &:focus + ${Label}, &:not(:placeholder-shown) + ${Label} {\n    transform: translateY(-150%);\n    color: #ffffff;\n  }\n`;\n\nexport const Button = styled.button`\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-weight: 500;\n  display: inline-block;\n  width: 100px;\n  height: 45px;\n  outline: none;\n  border: none;\n  border-radius: 10px;\n  position: absolute;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n\n  background-color: #ffd466; /* Фіолетовий фон */\n  color: #1e1f27; /* Світлий текст */\n`;\n\n\nexport const ButtonLabel = styled.span``;\n","import {  useSearchParams } from 'react-router-dom';\nimport {\n  Button,\n  ButtonLabel,\n  Input,\n  Label,\n  Wrapper,\n  Form,\n} from './SearchBar.styled';\n\nexport const SearchBar = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchHandler = evt => {\n    evt.preventDefault();\n\n    const searchQuery = evt.currentTarget.query.value;\n\n    searchParams.set('query', searchQuery.toLowerCase().trim());\n    setSearchParams(searchParams);\n  };\n\n  return (\n    <>\n      <Form onSubmit={searchHandler}>\n        <Wrapper>\n          <Input type=\"text\" name=\"query\" autoComplete=\"off\" placeholder=\"\" />\n          <Label>Search movies</Label>\n        <Button type=\"submit\">\n          <ButtonLabel>Search</ButtonLabel>\n        </Button>\n        </Wrapper>\n\n      </Form>\n    </>\n  );\n};\n","import { getMovieByName } from 'api/api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    async function getMovieByQuery() {\n      setIsLoading(true);\n      try {\n        const fetchedMovies = await getMovieByName(query);\n        setMovies(fetchedMovies);\n      } catch (error) {\n        toast.error('Ooops! Something went wrong. Try reloading page!');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovieByQuery();\n  }, [query]);\n\n  return (\n    <>\n      <SearchBar />\n      {isLoading && <Loader />}\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </>\n  );\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","Link","ItemLink","_templateObject3","Img","_templateObject4","MovieTitle","_templateObject5","MovieList","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","original_title","poster_path","_jsxs","to","concat","state","from","src","BASE_POSTER_URL","IMG_PLACEHOLDER","alt","Form","Wrapper","Label","Input","Button","ButtonLabel","_templateObject6","SearchBar","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_Fragment","onSubmit","evt","preventDefault","searchQuery","currentTarget","query","value","set","toLowerCase","trim","type","name","autoComplete","placeholder","MoviesPage","_searchParams$get","_useState","useState","_useState2","setMovies","_useState3","_useState4","isLoading","setIsLoading","get","useEffect","_getMovieByQuery","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedMovies","_context","prev","next","getMovieByName","sent","t0","toast","finish","stop","apply","arguments","getMovieByQuery","Loader","length"],"sourceRoot":""}