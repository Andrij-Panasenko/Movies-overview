{"version":3,"file":"static/js/164.9b02b842.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.js","pages/MoviesDetailsPage/MovieDetailsPage.js"],"sourcesContent":["import { BASE_POSTER_URL } from 'constants/constants';\n\nexport const MovieDetails = ({ movie }) => {\n  return (\n    <>\n      {movie && (\n        <div>\n          <img\n            src={`${BASE_POSTER_URL + movie.poster_path}`}\n            alt={movie.original_title}\n          />\n          <div>\n            <h1>{movie.original_title}</h1>\n            <p>User score: {movie.vote_average}</p>\n            <h2>Overview</h2>\n            <p>{movie.overview}</p>\n            <h2>Genres</h2>\n            <ul>\n              {movie.genres &&\n                movie.genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n            </ul>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { useEffect, useRef, useState } from 'react';\nimport { getMovieById } from 'api/api';\nimport { Loader } from 'components/Loader/Loader';\nimport toast from 'react-hot-toast';\nimport { MovieDetails } from 'components/MovieDetails/MovieDetails';\n\nexport default function MovieDetailsPage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movie, setMovie] = useState(null);\n\n  const location = useLocation();\n  const backLinckRef = useRef(location);\n  const param = useParams();\n\n  const backLink = backLinckRef.current.state?.from ?? '/';\n\n  useEffect(() => {\n    async function fetchMovie() {\n      setIsLoading(true);\n      try {\n        const fetchedMovie = await getMovieById(param.movieId);\n        setMovie(fetchedMovie);\n      } catch (error) {\n        toast.error('Ooops! Something went wrong. Try reloading page!');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovie();\n  }, [param.movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      <Link to={backLink}>\n        <b>Go Back</b>\n      </Link>\n\n      <MovieDetails movie={movie} />\n      <div>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <NavLink to=\"cast\">Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\">Reviews</NavLink>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </>\n  );\n}\n"],"names":["MovieDetails","_ref","movie","_jsx","_Fragment","children","_jsxs","src","concat","BASE_POSTER_URL","poster_path","alt","original_title","vote_average","overview","genres","map","genre","name","id","MovieDetailsPage","_backLinckRef$current","_backLinckRef$current2","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","setMovie","location","useLocation","backLinckRef","useRef","param","useParams","backLink","current","state","from","useEffect","_fetchMovie","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedMovie","_context","prev","next","getMovieById","movieId","sent","t0","toast","finish","stop","apply","arguments","fetchMovie","Loader","Link","to","NavLink","Outlet"],"sourceRoot":""}