{"version":3,"file":"static/js/311.5283eb8a.chunk.js","mappings":"+NAGaA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mHAQhBC,EAAWH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mPAcpBG,GAAOL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAgBO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,gIAQvBM,EAAMR,EAAAA,GAAAA,IAAUS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,yDAKhBQ,EAAaV,EAAAA,GAAAA,EAAQW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,Q,SClCrBU,EAAY,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAAClB,EAAI,CAAAmB,SACFJ,EAAOK,KAAI,SAAAC,GAA0C,IAAvCC,EAAED,EAAFC,GAAIC,EAAcF,EAAdE,eAAgBC,EAAWH,EAAXG,YACjC,OACEN,EAAAA,EAAAA,KAACd,EAAQ,CAAAe,UACPM,EAAAA,EAAAA,MAACnB,EAAI,CAACoB,GAAE,WAAAC,OAAaL,GAAMM,MAAO,CAAEC,KAAMb,GAAWG,SAAA,EACnDD,EAAAA,EAAAA,KAACT,EAAG,CACFqB,IAAKN,EAAcO,EAAAA,EAAkBP,EAAcQ,EAAAA,EACnDC,IAAKV,KAEPL,EAAAA,EAAAA,KAACP,EAAU,CAAAQ,SAAEI,QANFD,EAUnB,KAGN,C,kKCtBaY,E,OAAQjC,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mC,SCMf,SAASgC,IACtB,IAAAC,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAkCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAiB9B,OAfAG,EAAAA,EAAAA,YAAU,WACgB,SAAAC,IAUvB,OAVuBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OAAnBb,GAAa,GAAMW,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEEC,EAAAA,EAAAA,MAAc,KAAD,EAA1BJ,EAAIC,EAAAI,KACVX,EAAaM,GAAMC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEnBM,EAAAA,GAAAA,MAAY,oDAAoD,QAE5C,OAF4CN,EAAAC,KAAA,GAEhEZ,GAAa,GAAOW,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAV,EAAA,yBAEvBW,MAAA,KAAAC,UAAA,EAXc,WACSf,EAAAc,MAAC,KAADC,UAAA,CAWxBC,EACF,GAAG,KAGDtC,EAAAA,EAAAA,MAAAuC,EAAAA,SAAA,CAAA7C,SAAA,EACED,EAAAA,EAAAA,KAACgB,EAAK,CAAAf,SAAC,mBACNqB,IAAatB,EAAAA,EAAAA,KAAC+C,EAAAA,EAAM,KACrB/C,EAAAA,EAAAA,KAACL,EAAAA,EAAS,CAACE,OAAQ6B,MAGzB,C","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","pages/HomePage/HomePage.styled.js","pages/HomePage/HomaPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link as ItemLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 25px;\n  column-gap: 20px;\n  justify-content: center;\n`;\n\nexport const ListItem = styled.li`\n  width: 200px;\n  /* width: calc((100% - 100px) / 6); */\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-decoration: none;\n\n  transition: transform 200ms linear;\n\n  &:hover, &:focus {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Link = styled(ItemLink)`\n  color: #ffffff;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  border-radius: 10px;\n  margin-bottom: 6px;\n`;\n\nexport const MovieTitle = styled.p``;\n","import { BASE_POSTER_URL, IMG_PLACEHOLDER } from 'constants/constants';\nimport { useLocation } from 'react-router-dom';\nimport { Img, Link, List, ListItem, MovieTitle } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, original_title, poster_path }) => {\n        return (\n          <ListItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <Img\n                src={poster_path ? BASE_POSTER_URL + poster_path : IMG_PLACEHOLDER}\n                alt={original_title}\n              />\n              <MovieTitle>{original_title}</MovieTitle>\n            </Link>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n   margin-bottom: 20px;\n`;","import { getTrending } from 'api/api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\n\nimport toast from 'react-hot-toast';\nimport { Title } from './HomePage.styled';\n\nexport default function HomePage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [trendings, setTrendings] = useState([]);\n\n  useEffect(() => {\n    async function getMovies() {\n      setIsLoading(true);\n      try {\n        const data = await getTrending();\n        setTrendings(data);\n      } catch (error) {\n        toast.error('Ooops! Something went wrong. Try reloading page!');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovies();\n  }, []);\n\n  return (\n    <>\n      <Title>Trending today</Title>\n      {isLoading && <Loader />}\n      <MovieList movies={trendings} />\n    </>\n  );\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","Link","ItemLink","_templateObject3","Img","_templateObject4","MovieTitle","_templateObject5","MovieList","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","original_title","poster_path","_jsxs","to","concat","state","from","src","BASE_POSTER_URL","IMG_PLACEHOLDER","alt","Title","HomePage","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","trendings","setTrendings","useEffect","_getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getTrending","sent","t0","toast","finish","stop","apply","arguments","getMovies","_Fragment","Loader"],"sourceRoot":""}